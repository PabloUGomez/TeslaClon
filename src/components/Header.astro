---
import TeslaIcon from '../components/icons/Tesla.astro'
import SupportIcon from '../components/icons/Support.astro'
import LenguageIcon from '../components/icons/Lenguage.astro'
import UserIcon from '../components/icons/User.astro'
---

<header
  id='header-menu'
  class='py-6 px-10 flex fixed justify-between items-center w-full z-40 text-white'
>
  <div class='flex flex-grow basis-0'>
    <TeslaIcon />
  </div>
  <nav class='lg:block hidden'>
    <ul
      class='flex text-sm [&>li]:font-medium [&>li]:transition-colors duration-200 [&>li]:text-current [&>li]:inline-block [&>li]:px-4 [&>li]:py-2'
    >
      <li><a href='#'>Vehicules</a></li>
      <li><a href='#'>Energy</a></li>
      <li><a href='#'>Charging</a></li>
      <li><a href='#'>Discover</a></li>
      <li><a href='https://shop.tesla.com/'>Shop</a></li>
    </ul>
  </nav>
  <nav class='flex-grow basis-0 justify-end lg:flex hidden'>
    <ul
      class='flex text-sm [&>li]:inline-block [&>li]:transition-colors duration-200 [&>li]:text-current [&>li]:px-2 [&>li]:py-1'
    >
      <li><a href='#'><SupportIcon /></a></li>
      <li><a href='#'><LenguageIcon /></a></li>
      <li><a href='https://www.tesla.com/teslaaccount'><UserIcon /></a></li>
    </ul>
  </nav>
  <nav class='lg:hidden flex'>
    <button
      class='label text-sm font-medium transition-colors duration-200 text-current px-4 py-2 bg-black/10 backdrop-blur-md rounded'
      id='show-menu-button'>Menu</button
    >
  </nav>
  <nav
    class='absolute bg-white h-screen w-full top-0 left-0 z-50 hidden'
    id='menu'
  >
    <button
      class='label text-sm font-medium transition-colors duration-200 text-current px-4 py-2 bg-black/10 backdrop-blur-md rounded absolute top-6 right-10'
      id='hide-menu-button'
      ><svg
        class='w-6 h-6 '
        aria-hidden='true'
        xmlns='http://www.w3.org/2000/svg'
        width='24'
        height='24'
        fill='black'
        viewBox='0 0 24 24'
      >
        <path
          stroke='currentColor'
          stroke-linecap='round'
          stroke-linejoin='round'
          stroke-width='2'
          d='M6 18 17.94 6M18 18 6.06 6'></path>
      </svg>
    </button>
    <ul
      class='flex flex-col mt-40 w-full text-xl gap-y-6 left-0 font-semibold [&>li]:mx-4 [&>li]:inline-block [&>li]:transition-colors duration-200 [&>li]:text-current [&>li]:px-3  [&>li]:py-3 [&>li]:rounded-md'
    >
      <li class="hover:bg-gray-200"><a href='#'>Vehicules</a></li>
      <li class="hover:bg-gray-200"><a href='#'>Energy</a></li>
      <li class="hover:bg-gray-200"><a href='#'>Charging</a></li>
      <li class="hover:bg-gray-200"><a href='#'>Discover</a></li>
      <li class="hover:bg-gray-200"><a href='https://shop.tesla.com/'>Shop</a></li>
    </ul>
  </nav>
  <div
    id='menu-backdrop'
    class='absolute bg-black/10 backdrop-blur-md rounded
    left-[var(--left)] top-[var(--top)]
    w-[var(--width)] h-[var(--height)]
    transition-all duration-300
    ease-in-out
    opacity-0 -z-10'
  >
  </div>

  <script>
    const menu = document.querySelector('#menu') as HTMLElement
    const hidemenuButton = document.querySelector(
      '#hide-menu-button'
    ) as HTMLElement
    const showmenuButton = document.querySelector(
      '#show-menu-button'
    ) as HTMLElement
    const listItem = document.querySelectorAll('#header-menu li')
    const menuBackdrop = document.querySelector('#menu-backdrop') as HTMLElement

    showmenuButton.addEventListener('click', () => {
      menu.classList.add('visible')
      menu.classList.remove('hidden')
    })
    hidemenuButton.addEventListener('click', () => {
      menu.classList.add('hidden')
      menu.classList.remove('visible')
    })

    listItem.forEach((item) => {
      item.addEventListener('mouseenter', () => {
        const { left, top, width, height } = item.getBoundingClientRect()

        menuBackdrop.style.setProperty('--left', `${left}px`)
        menuBackdrop.style.setProperty('--top', `${top}px`)
        menuBackdrop.style.setProperty('--width', `${width}px`)
        menuBackdrop.style.setProperty('--height', `${height}px`)
        menuBackdrop.style.opacity = '1'
      })
      item.addEventListener('mouseleave', () => {
        menuBackdrop.style.opacity = '0'
      })
    })

    const header = document.querySelector('#header-menu') as HTMLElement

    const observerOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.6,
    }
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const { isIntersecting } = entry
        if (isIntersecting) {
          const color = entry.target.getAttribute('data-color')
          header.style.color = color
        }
      })
    }, observerOptions)

    const sections = document.querySelectorAll('.landing-section')

    sections.forEach((section) => {
      observer.observe(section)
    })
  </script>
</header>
